{"version":3,"sources":["api/index.ts","store/index.ts","store/reducer.ts","components/Articles/Article/Avatar.tsx","components/Articles/Article/Story.tsx","components/Articles/Article/index.tsx","components/Articles/Loading.tsx","components/Articles/ArticleList.tsx","components/Articles/ArticleForm.tsx","components/Articles/ArticleSearch.tsx","components/Articles/ArticlesDashboard.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","headers","Accept","checkStatus","response","status","error","Error","statusText","console","log","parseJson","data","methods","getUsers","success","get","then","getStories","createStory","post","createUserAndStory","user","story","deleteStory","delete","updateStory","put","id","store","createStore","state","action","type","stories","payload","loading","users","updateArticles","removeStoryIndex","findIndex","splice","updateStoryIndex","searchOption","searchValue","Avatar","name","picture","joined","className","src","alt","moment","fromNow","Story","title","created","edited","author","dispatch","useDispatch","useState","deleteConfirm","setDelete","editConfirm","setEdit","updatedStory","titleError","setTitleError","storyError","setStoryError","date","Date","schema","Yup","min","max","required","value","onChange","target","onClick","validate","abortEarly","catch","err","errorMessages","inner","map","path","message","reduce","obj","k","v","concat","titleErrors","join","toString","storyErrors","valid","Article","userData","useSelector","filter","Loading","ArticleList","userState","storiesState","updateArticlesState","isLoading","useEffect","loadDataFromServer","serverStories","serverUsers","interval","setInterval","clearInterval","username","toLocaleLowerCase","includes","sort","a","b","ArticleForm","storyState","hideForm","setHideForm","values","avatar","findUser","find","newUserID","length","newStoryID","handleFormState","initialValues","validationSchema","url","onSubmit","setSubmitting","resetForm","setTimeout","isSubmitting","setFieldValue","htmlFor","field","meta","touched","onKeyUp","e","handleAvatar","placeholder","component","disabled","ArticleSearch","ArticlesDashboard","App","year","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6f8c6df.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = 'https://bdeilhot-react.herokuapp.com'\r\n\r\nconst api = axios.create({\r\n    baseURL,\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport function getUsers(success: any) {\r\n    return api.get(`/users`)\r\n        .then(checkStatus)\r\n        .then(parseJson)\r\n        .then(success);\r\n}\r\n\r\nexport function getStories(success: any) {\r\n    return api.get(`/stories`)\r\n        .then(checkStatus)\r\n        .then(parseJson)\r\n        .then(success);\r\n}\r\n\r\nexport function createStory(data: any) {\r\n    return api.post(`/stories`, data)\r\n    .then(checkStatus);\r\n}\r\n\r\nexport function createUserAndStory(data: any) {\r\n    api.post(`/users`, data.user).then(checkStatus);\r\n    api.post(`/stories`, data.story).then(checkStatus);\r\n    return\r\n}\r\n\r\nexport function deleteStory(data: any) {\r\n    return api.delete(`/stories?id=eq.${data}`)\r\n    .then(checkStatus);\r\n}\r\n\r\nexport function updateStory(data: any) {\r\n    return api.put(`/stories?id=eq.${data.id}`, data)\r\n    .then(checkStatus)\r\n}\r\n\r\nfunction checkStatus(response: any) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response;\r\n    }\r\n\r\n    const error = new Error(`HTTP Error ${response.statusText}`);\r\n    console.log(error);\r\n    throw error;\r\n}\r\n\r\nfunction parseJson(response: any) {\r\n    return response.data;\r\n}\r\n\r\nconst methods = {\r\n    getUsers,\r\n    getStories,\r\n    createStory,\r\n    createUserAndStory,\r\n    deleteStory,\r\n    updateStory\r\n};\r\n\r\nexport default methods;","import { IDefaultState } from './../model/interface';\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst initialState: IDefaultState = {\r\n    users: [],\r\n    stories: [],\r\n    updateArticles: false,\r\n    loading: true,\r\n    searchOption: 'title',\r\n    searchValue: ''\r\n};\r\n\r\nexport const store = createStore(reducer, initialState);","import api from '../api';\r\nimport { IStory } from '../model/interface';\r\n\r\nexport default function reducer(state: any, action: any) {\r\n    \r\n    switch (action.type) {\r\n        case 'FETCH_STORIES_SUCCESS':\r\n            return { \r\n                ...state,\r\n                stories: action.payload,\r\n                loading: false\r\n            }\r\n        case 'FETCH_USER_SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case 'ADD_STORY':\r\n            api.createStory(action.story);\r\n            return {\r\n                ...state,\r\n                stories: [...state.stories, action.story],\r\n                updateArticles: true\r\n            }\r\n        case 'CREATE_USER_AND_STORY':\r\n            api.createUserAndStory(action)\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.user],\r\n                stories: [...state.stories, action.story],\r\n                updateArticles: true\r\n            }\r\n        case 'REMOVE_STORY':\r\n            const removeStoryIndex = state.stories.findIndex((story: IStory) => story.id === action.story.id);\r\n            state.stories.splice(removeStoryIndex, 1);\r\n            return{\r\n                ...state,\r\n                stories: [...state.stories]\r\n            }\r\n        case 'UPDATE_STORY':\r\n            const updateStoryIndex = state.stories.findIndex((story: IStory) => story.id === action.story.id);\r\n            state.stories.splice(updateStoryIndex, 1, action.story);\r\n            api.updateStory(action.story);\r\n            return {\r\n                ...state,\r\n                stories: [...state.stories]\r\n            }\r\n        case 'STOP_ARTICLE_UPDATE':\r\n            return {\r\n                ...state,\r\n                updateArticles: false\r\n            }\r\n        case 'SEARCH_OPTION_CHANGE':\r\n            return {\r\n                ...state,\r\n                searchOption: action.payload\r\n            }\r\n        case 'SEARCH_VALUE_CHANGE':\r\n            return {\r\n                ...state,\r\n                searchValue: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}","import { IAvatar } from \"../../../model/interface\";\r\nimport moment from \"moment\";\r\n\r\nconst Avatar = ({ name, picture, joined }: IAvatar) => {\r\n\r\n    return(\r\n        <div className=\"col-2-30 avatar\">\r\n            <div>\r\n                <img src={picture} alt=\"Avatar\"/>\r\n                <span>{name}</span>\r\n            </div>\r\n            <div className=\"meta\">\r\n                <p>Joined {moment(joined).fromNow()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Avatar;","import { IStory } from \"../../../model/interface\";\r\nimport moment from \"moment\";\r\nimport api from '../../../api';\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from 'yup'\r\n\r\nconst Story = ({ id, title, story, created, edited, author}: IStory ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [deleteConfirm, setDelete] = useState(false);\r\n    const [editConfirm, setEdit] = useState(false);\r\n    const [updatedStory, updateStory] = useState({ title: title, story: story});\r\n    const [titleError, setTitleError] = useState(null);\r\n    const [storyError, setStoryError] = useState(null);\r\n\r\n\r\n    const date = new Date();\r\n\r\n    const schema = Yup.object({\r\n        title: Yup.string()\r\n        .min(5, 'Must be at least 5 characters')\r\n        .max(50, 'Must be 50 characters or less')\r\n        .required('Title is required'),\r\n        story: Yup.string()\r\n        .min(30, 'Must be 30 characters or more')\r\n        .required('Story is required'),\r\n    })\r\n\r\n    function handleDeleteClick() {\r\n        setDelete(deleteConfirm === false ? true : false);\r\n    }\r\n\r\n    function handleConfirmDelete() {\r\n        api.deleteStory(id)\r\n        dispatch({ type: 'REMOVE_STORY', story: { id: id } });\r\n        setDelete(false);\r\n    }\r\n\r\n    function handleEditClick() {\r\n\r\n        if (editConfirm === true) {\r\n\r\n            schema.validate({\r\n                title: updatedStory.title,\r\n                story: updatedStory.story\r\n            },\r\n            {abortEarly: false}\r\n            )\r\n            .catch(function (err) {\r\n                const errors = err.inner.map((error: any) => ([error.path, error.message]))\r\n                const errorMessages = errors.reduce((obj:any, [k, v]: any) => ({\r\n                   ...obj, [k]: k in obj ? [].concat(obj[k], v) : [v]\r\n                }), {});\r\n\r\n                const titleErrors = errorMessages.title ? errorMessages.title.join(' and ').toString() : null;\r\n                const storyErrors = errorMessages.story ? errorMessages.story.join(' and ').toString() : null;\r\n                \r\n                setTitleError(titleErrors);\r\n                setStoryError(storyErrors);\r\n              })\r\n            .then(function (valid) {\r\n                if(valid) {\r\n                    setTitleError(null);\r\n                    setStoryError(null);\r\n                    validatedStory();\r\n                }\r\n                return\r\n            });\r\n            return\r\n        }\r\n\r\n        setEdit(editConfirm === false ? true : false);\r\n    }\r\n\r\n    function validatedStory() {\r\n\r\n        dispatch({ \r\n            type: 'UPDATE_STORY',\r\n            story: { \r\n                id: id, \r\n                title: updatedStory.title, \r\n                story: {story: updatedStory.story}, \r\n                created: created, \r\n                edited: date,\r\n                author: author\r\n            } \r\n        });\r\n\r\n\r\n        setEdit(editConfirm === false ? true : false);\r\n    }    \r\n\r\n    return(\r\n        <div className=\"col-2-70 story\">\r\n            <div className=\"title\">\r\n                {editConfirm === true\r\n                ? <input type=\"text\" value={updatedStory.title} onChange={({target: { value }}) => updateStory({ title: value, story: updatedStory.story })} className={`input ${titleError === null ? '' : 'error-border'}`}/>\r\n                : <h2>{title}</h2>\r\n                }\r\n                <p className=\"error-message\">{titleError === null ? null : titleError}</p>\r\n            </div>\r\n            <div className=\"message\">\r\n                {editConfirm === true\r\n                ? <textarea value={updatedStory.story} onChange={({target: { value }}) => updateStory({ title: updatedStory.title, story: value})} className={`textarea ${storyError === null ? '' : 'error-border'}`}/>\r\n                : <p>{story}</p>\r\n                }\r\n                <p className=\"error-message\">{ storyError === null ? null : storyError }</p>\r\n            </div>\r\n            <div className=\"article-footer meta\">\r\n                <p>{edited === created ? `Created ${moment(created).fromNow()}` : `Edited ${moment(edited).fromNow()}`} </p>\r\n                <button onClick={handleEditClick} className={`bt bt-left ${editConfirm === true ? 'bt-active' : ''}`}>Edit</button>\r\n                <button onClick={handleDeleteClick} className=\"bt bt-right\">Delete</button>\r\n            </div>\r\n            {deleteConfirm === true \r\n            ? <div className=\"delete-confirm\">\r\n                <p>Are you sure?</p>\r\n                <div>\r\n                    <button onClick={handleConfirmDelete} className=\"bt bt-left\">Yes</button>\r\n                    <button onClick={() => (setDelete(false))} className=\"bt bt-right\">No</button>\r\n                </div>\r\n            </div>\r\n            : null\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Story;","import { IArticleProps, IDefaultState } from \"../../../model/interface\";\r\nimport Avatar from \"./Avatar\";\r\nimport Story from \"./Story\";\r\nimport { useSelector } from \"react-redux\";\r\nimport './styles/main.scss';\r\n\r\nconst Article = ({ id, title, author, story, created, edited }: IArticleProps) => {\r\n\r\n\r\n    const userState = useSelector((state: IDefaultState ) => state.users)\r\n\r\n    const userData = userState.filter(\r\n            (user: any) => user.id === author\r\n        );\r\n\r\n    const user = {...userData[0]}\r\n\r\n    return (\r\n        <div className=\"article\">\r\n            <Avatar\r\n                name={user.name}\r\n                picture={user.picture}\r\n                joined={user.joined}\r\n            />\r\n            <Story\r\n                id={id}\r\n                title={title}\r\n                story={story}\r\n                created={created}\r\n                edited={edited}\r\n                author={author}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article;","\r\nconst Loading = () => {\r\n\r\n    return(\r\n        <div className=\"loading\">\r\n            <div className=\"lds-ellipsis\">\r\n                <div></div><div></div><div></div><div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IDefaultState, IStories } from '../../model/interface';\r\nimport Article from \"./Article\";\r\nimport Loading from \"./Loading\";\r\nimport api from '../../api';\r\n\r\nconst ArticleList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector((state: IDefaultState ) => state.users)\r\n    const storiesState = useSelector((state: IDefaultState ) => state.stories)\r\n    const updateArticlesState = useSelector((state: IDefaultState ) => state.updateArticles)\r\n    const isLoading = useSelector((state: IDefaultState) => state.loading)\r\n    const searchOption = useSelector((state: IDefaultState) => state.searchOption)\r\n    const searchValue = useSelector((state: IDefaultState) => state.searchValue)\r\n\r\n    useEffect(() => {\r\n\r\n        function loadDataFromServer() {\r\n            api.getStories((serverStories: any) => dispatch({ type: 'FETCH_STORIES_SUCCESS', payload: serverStories }))\r\n            api.getUsers((serverUsers: any) => dispatch({ type: 'FETCH_USER_SUCCESS', payload: serverUsers }))\r\n        }\r\n\r\n        loadDataFromServer()\r\n        console.log('articles loaded')\r\n        \r\n        const interval = setInterval(loadDataFromServer, 5000)\r\n        dispatch({ type: 'STOP_ARTICLE_UPDATE' })\r\n        return () => clearInterval(interval);\r\n\r\n\r\n    },[dispatch, updateArticlesState]);\r\n\r\n\r\n\r\n    const username = userState.filter(\r\n        (user: any) => {\r\n            return user.name.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase()) \r\n        }\r\n    );\r\n\r\n    const stories = searchValue === '' \r\n        ? storiesState\r\n        .sort((a: IStories, b: IStories) => b.created > a.created ? 1 : -1)\r\n        .map((story: any) => (\r\n        <Article\r\n            key={story.id}\r\n            id={story.id}\r\n            title={story.title}\r\n            author={story.author}\r\n            story={story.story.story}\r\n            created={story.created}\r\n            edited={story.edited}\r\n        />\r\n        ))\r\n        : storiesState\r\n        .sort((a: IStories, b: IStories) => b.created > a.created ? 1 : -1)\r\n        .filter(searchOption === 'title' \r\n                ? (story: any) => story.title.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())\r\n                : (story: any) => story.author === {...username[0]}.id\r\n                )\r\n        .map((story: any) => (\r\n        <Article\r\n            key={story.id}\r\n            id={story.id}\r\n            title={story.title}\r\n            author={story.author}\r\n            story={story.story.story}\r\n            created={story.created}\r\n            edited={story.edited}\r\n        />\r\n        ))\r\n\r\n    return(\r\n        <>\r\n        {isLoading ? <Loading /> : null}\r\n        <div className=\"article-list\">\r\n            {stories}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArticleList;","import { IDefaultState } from \"../../model/interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useState } from \"react\";\r\n\r\nconst ArticleForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userState = useSelector((state: IDefaultState ) => state.users)\r\n    const storyState = useSelector((state: IDefaultState ) => state.stories)\r\n\r\n    const [hideForm, setHideForm] = useState(true)\r\n    \r\n    const date = new Date();\r\n\r\n    const values = {\r\n        username: '',\r\n        avatar: '',\r\n        title: '',\r\n        story: '',\r\n    }\r\n\r\n    function findUser(value: any) {\r\n        if (userState.find((user: any) => user.name.toLocaleLowerCase() === value.toLocaleLowerCase())) {\r\n            const userData = userState.filter((user: any) => user.name.toLocaleLowerCase() === value.toLocaleLowerCase());\r\n            const user = {...userData[0]};\r\n            return user\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleAvatar = (e: any) => {\r\n        const avatar = findUser(e.target.value);\r\n        if (avatar) {\r\n            values.avatar = avatar.picture\r\n            return\r\n        }\r\n        return\r\n    }\r\n\r\n    function newUserID() {\r\n        return userState.length + 1\r\n    }\r\n\r\n    function newStoryID() {\r\n        return storyState.length === 0 ? 1 : storyState[0].id + 1\r\n    }\r\n\r\n    function handleFormState() {\r\n        setHideForm(hideForm ? false : true);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={values}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string()\r\n                    .min(2, 'Must be at least 2 characters long')\r\n                    .max(15, 'Must be 15 characters or less')\r\n                    .required('Username is required'),\r\n                avatar: Yup.string().url('Avatar must be a valid URL'),\r\n                title: Yup.string()\r\n                    .min(5, 'Must be at least 5 characters')\r\n                    .max(50, 'Must be 50 characters or less')\r\n                    .required('Title is required'),\r\n                story: Yup.string()\r\n                    .min(30, 'Must be 30 characters or more')\r\n                    .required('Story is required'),\r\n            })}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                setTimeout(() => {\r\n\r\n                    const user = findUser(values.username);\r\n\r\n                    if(user) {\r\n                        dispatch({\r\n                            type: 'ADD_STORY',\r\n                            story: {\r\n                                id: newStoryID(),\r\n                                title: values.title,\r\n                                author: user.id,\r\n                                story: {story: values.story},\r\n                                created: date,\r\n                                edited: date\r\n                            }\r\n                        })\r\n                    } else {\r\n                        dispatch({\r\n                            type: 'CREATE_USER_AND_STORY',\r\n                            user: {\r\n                                id: newUserID(),\r\n                                name: values.username,\r\n                                picture: values.avatar === '' ? 'https://brunodeilhot.github.io/Astrology/assets/background.png' : values.avatar,\r\n                                joined: date\r\n                            },\r\n                            story: {\r\n                                id: newStoryID(),\r\n                                title: values.title,\r\n                                author: newUserID(),\r\n                                story: {story: values.story},\r\n                                created: date,\r\n                                edited: date\r\n                            }\r\n                        })\r\n                    }\r\n                    setSubmitting(false);\r\n                    handleFormState();\r\n                    resetForm();\r\n                }, 400);\r\n            }}\r\n        >\r\n            {({ isSubmitting, setFieldValue }) => (\r\n                <div className=\"article-form-group\">\r\n\r\n                    <div className=\"article-header\">\r\n                    <h2>Create a story</h2>\r\n                    <button onClick={handleFormState}><i className={hideForm ? 'gg-chevron-down' : 'gg-chevron-up'}></i></button>\r\n                    </div>\r\n                    {hideForm ? null : \r\n                        <Form className=\"article-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2-30\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n\r\n                                    <Field name=\"username\">\r\n                                        {({field, meta: { touched, error }}: { field: any, meta: any}) => \r\n                                        <input onKeyUp={(e: any) => { handleAvatar(e); setFieldValue('avatar', values.avatar, true) }} placeholder=\"Your name is..\" type=\"text\" className={touched && error ? \"input error-border\" : \"input\"} {...field} />\r\n                                        }\r\n                                    </Field>\r\n                                    <ErrorMessage className=\"error-message\" name=\"username\" component=\"div\" />\r\n                                    <label htmlFor=\"avatar\">Avatar</label>\r\n                                    <Field name=\"avatar\">\r\n                                        {({field, meta: { touched, error }}: { field: any, meta: any}) => \r\n                                            <input placeholder=\"Link to an image..\" type=\"text\" className={touched && error ? \"input error-border\" : \"input\"} {...field} />\r\n                                        }\r\n                                    </Field>\r\n                                    <ErrorMessage className=\"error-message\" name=\"avatar\" component=\"div\" />\r\n                                </div>\r\n                                <div className=\"col-2-70\">\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <Field name=\"title\" >\r\n                                        {({field, meta: { touched, error }}: { field: any, meta: any}) => \r\n                                            <input placeholder=\"The main subject of your story..\" type=\"text\" className={touched && error ? \"input error-border\" : \"input\"} {...field} />\r\n                                        }\r\n                                    </Field>\r\n                                    <ErrorMessage className=\"error-message\" name=\"title\" component=\"div\" />\r\n                                    <label htmlFor=\"story\">Story</label>\r\n                                    <Field name=\"story\" >\r\n                                        {({field, meta: { touched, error }}: { field: any, meta: any}) => \r\n                                            <textarea placeholder=\"Write to your hearth's delight..\" className={touched && error ? \"textarea error-border\" : \"textarea\"} {...field} />\r\n                                        }\r\n                                    </Field>\r\n                                    <ErrorMessage className=\"error-message\" name=\"story\" component=\"div\" />\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"submit\" disabled={isSubmitting}>Add Story</button>\r\n                        </Form>\r\n                    }\r\n\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ArticleForm;","import { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst ArticleSearch = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function handleOptionChange (e: any) {\r\n        dispatch({ type: 'SEARCH_OPTION_CHANGE', payload: e.target.value });\r\n    }\r\n\r\n    function handleValueChange (e: any) {\r\n        dispatch({ type: 'SEARCH_VALUE_CHANGE', payload: e.target.value })\r\n    }\r\n\r\n    return(\r\n        <div className=\"search\">\r\n            <select onChange={handleOptionChange} className=\"search-select\">\r\n                <option value=\"title\">Title</option>\r\n                <option value=\"author\">Author</option>\r\n            </select>\r\n            <div><i className=\"gg-search\"/></div>\r\n            <input onChange={handleValueChange} className=\"input\" type=\"text\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleSearch;","import ArticleList from \"./ArticleList\";\r\nimport ArticleForm from \"./ArticleForm\";\r\nimport ArticleSearch from \"./ArticleSearch\";\r\nimport './styles/main.scss';\r\n\r\nconst ArticlesDashboard = () => {\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <ArticleForm />\r\n            <ArticleSearch />\r\n            <ArticleList />\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ArticlesDashboard;","import moment from 'moment';\nimport ArticlesDashboard from './components/Articles/ArticlesDashboard';\nimport './styles/main.scss';\n\nconst App = () => {\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Share your story!</h1>\n      </div>\n      <ArticlesDashboard />\n      <div className=\"footer\">\n        <p>Designed and built by Bruno Deilhot &copy; {moment().year()}</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}